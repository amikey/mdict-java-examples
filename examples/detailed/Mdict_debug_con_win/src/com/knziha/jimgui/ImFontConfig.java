/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.knziha.jimgui;

public class ImFontConfig {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ImFontConfig(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ImFontConfig obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jimguiJNI.delete_ImFontConfig(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setFontData(SWIGTYPE_p_void value) {
    jimguiJNI.ImFontConfig_FontData_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getFontData() {
    long cPtr = jimguiJNI.ImFontConfig_FontData_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setFontDataSize(int value) {
    jimguiJNI.ImFontConfig_FontDataSize_set(swigCPtr, this, value);
  }

  public int getFontDataSize() {
    return jimguiJNI.ImFontConfig_FontDataSize_get(swigCPtr, this);
  }

  public void setFontDataOwnedByAtlas(boolean value) {
    jimguiJNI.ImFontConfig_FontDataOwnedByAtlas_set(swigCPtr, this, value);
  }

  public boolean getFontDataOwnedByAtlas() {
    return jimguiJNI.ImFontConfig_FontDataOwnedByAtlas_get(swigCPtr, this);
  }

  public void setFontNo(int value) {
    jimguiJNI.ImFontConfig_FontNo_set(swigCPtr, this, value);
  }

  public int getFontNo() {
    return jimguiJNI.ImFontConfig_FontNo_get(swigCPtr, this);
  }

  public void setSizePixels(float value) {
    jimguiJNI.ImFontConfig_SizePixels_set(swigCPtr, this, value);
  }

  public float getSizePixels() {
    return jimguiJNI.ImFontConfig_SizePixels_get(swigCPtr, this);
  }

  public void setOversampleH(int value) {
    jimguiJNI.ImFontConfig_OversampleH_set(swigCPtr, this, value);
  }

  public int getOversampleH() {
    return jimguiJNI.ImFontConfig_OversampleH_get(swigCPtr, this);
  }

  public void setOversampleV(int value) {
    jimguiJNI.ImFontConfig_OversampleV_set(swigCPtr, this, value);
  }

  public int getOversampleV() {
    return jimguiJNI.ImFontConfig_OversampleV_get(swigCPtr, this);
  }

  public void setPixelSnapH(boolean value) {
    jimguiJNI.ImFontConfig_PixelSnapH_set(swigCPtr, this, value);
  }

  public boolean getPixelSnapH() {
    return jimguiJNI.ImFontConfig_PixelSnapH_get(swigCPtr, this);
  }

  public void setGlyphExtraSpacing(ImVec2 value) {
    jimguiJNI.ImFontConfig_GlyphExtraSpacing_set(swigCPtr, this, ImVec2.getCPtr(value), value);
  }

  public ImVec2 getGlyphExtraSpacing() {
    long cPtr = jimguiJNI.ImFontConfig_GlyphExtraSpacing_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ImVec2(cPtr, false);
  }

  public void setGlyphOffset(ImVec2 value) {
    jimguiJNI.ImFontConfig_GlyphOffset_set(swigCPtr, this, ImVec2.getCPtr(value), value);
  }

  public ImVec2 getGlyphOffset() {
    long cPtr = jimguiJNI.ImFontConfig_GlyphOffset_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ImVec2(cPtr, false);
  }

  public void setGlyphRanges(SWIGTYPE_p_unsigned_short value) {
    jimguiJNI.ImFontConfig_GlyphRanges_set(swigCPtr, this, SWIGTYPE_p_unsigned_short.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_short getGlyphRanges() {
    long cPtr = jimguiJNI.ImFontConfig_GlyphRanges_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_short(cPtr, false);
  }

  public void setGlyphMinAdvanceX(float value) {
    jimguiJNI.ImFontConfig_GlyphMinAdvanceX_set(swigCPtr, this, value);
  }

  public float getGlyphMinAdvanceX() {
    return jimguiJNI.ImFontConfig_GlyphMinAdvanceX_get(swigCPtr, this);
  }

  public void setGlyphMaxAdvanceX(float value) {
    jimguiJNI.ImFontConfig_GlyphMaxAdvanceX_set(swigCPtr, this, value);
  }

  public float getGlyphMaxAdvanceX() {
    return jimguiJNI.ImFontConfig_GlyphMaxAdvanceX_get(swigCPtr, this);
  }

  public void setMergeMode(boolean value) {
    jimguiJNI.ImFontConfig_MergeMode_set(swigCPtr, this, value);
  }

  public boolean getMergeMode() {
    return jimguiJNI.ImFontConfig_MergeMode_get(swigCPtr, this);
  }

  public void setRasterizerFlags(long value) {
    jimguiJNI.ImFontConfig_RasterizerFlags_set(swigCPtr, this, value);
  }

  public long getRasterizerFlags() {
    return jimguiJNI.ImFontConfig_RasterizerFlags_get(swigCPtr, this);
  }

  public void setRasterizerMultiply(float value) {
    jimguiJNI.ImFontConfig_RasterizerMultiply_set(swigCPtr, this, value);
  }

  public float getRasterizerMultiply() {
    return jimguiJNI.ImFontConfig_RasterizerMultiply_get(swigCPtr, this);
  }

  public void setName(String value) {
    jimguiJNI.ImFontConfig_Name_set(swigCPtr, this, value);
  }

  public String getName() {
    return jimguiJNI.ImFontConfig_Name_get(swigCPtr, this);
  }

  public void setDstFont(ImFont value) {
    jimguiJNI.ImFontConfig_DstFont_set(swigCPtr, this, ImFont.getCPtr(value), value);
  }

  public ImFont getDstFont() {
    long cPtr = jimguiJNI.ImFontConfig_DstFont_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFontConfig() {
    this(jimguiJNI.new_ImFontConfig(), true);
  }

}
