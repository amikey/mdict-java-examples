/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.knziha.jimgui;

public class ImFontAtlas {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ImFontAtlas(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ImFontAtlas obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jimguiJNI.delete_ImFontAtlas(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ImFontAtlas() {
    this(jimguiJNI.new_ImFontAtlas(), true);
  }

  public ImFont AddFont(ImFontConfig font_cfg) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFont(swigCPtr, this, ImFontConfig.getCPtr(font_cfg), font_cfg);
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontDefault(ImFontConfig font_cfg) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontDefault__SWIG_0(swigCPtr, this, ImFontConfig.getCPtr(font_cfg), font_cfg);
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontDefault() {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontDefault__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontFromFileTTF(String filename, float size_pixels, ImFontConfig font_cfg, SWIGTYPE_p_unsigned_short glyph_ranges) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontFromFileTTF__SWIG_0(swigCPtr, this, filename, size_pixels, ImFontConfig.getCPtr(font_cfg), font_cfg, SWIGTYPE_p_unsigned_short.getCPtr(glyph_ranges));
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontFromFileTTF(String filename, float size_pixels, ImFontConfig font_cfg) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontFromFileTTF__SWIG_1(swigCPtr, this, filename, size_pixels, ImFontConfig.getCPtr(font_cfg), font_cfg);
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontFromFileTTF(String filename, float size_pixels) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontFromFileTTF__SWIG_2(swigCPtr, this, filename, size_pixels);
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontFromMemoryTTF(SWIGTYPE_p_void font_data, int font_size, float size_pixels, ImFontConfig font_cfg, SWIGTYPE_p_unsigned_short glyph_ranges) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontFromMemoryTTF__SWIG_0(swigCPtr, this, SWIGTYPE_p_void.getCPtr(font_data), font_size, size_pixels, ImFontConfig.getCPtr(font_cfg), font_cfg, SWIGTYPE_p_unsigned_short.getCPtr(glyph_ranges));
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontFromMemoryTTF(SWIGTYPE_p_void font_data, int font_size, float size_pixels, ImFontConfig font_cfg) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontFromMemoryTTF__SWIG_1(swigCPtr, this, SWIGTYPE_p_void.getCPtr(font_data), font_size, size_pixels, ImFontConfig.getCPtr(font_cfg), font_cfg);
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontFromMemoryTTF(SWIGTYPE_p_void font_data, int font_size, float size_pixels) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontFromMemoryTTF__SWIG_2(swigCPtr, this, SWIGTYPE_p_void.getCPtr(font_data), font_size, size_pixels);
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontFromMemoryCompressedTTF(SWIGTYPE_p_void compressed_font_data, int compressed_font_size, float size_pixels, ImFontConfig font_cfg, SWIGTYPE_p_unsigned_short glyph_ranges) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontFromMemoryCompressedTTF__SWIG_0(swigCPtr, this, SWIGTYPE_p_void.getCPtr(compressed_font_data), compressed_font_size, size_pixels, ImFontConfig.getCPtr(font_cfg), font_cfg, SWIGTYPE_p_unsigned_short.getCPtr(glyph_ranges));
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontFromMemoryCompressedTTF(SWIGTYPE_p_void compressed_font_data, int compressed_font_size, float size_pixels, ImFontConfig font_cfg) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontFromMemoryCompressedTTF__SWIG_1(swigCPtr, this, SWIGTYPE_p_void.getCPtr(compressed_font_data), compressed_font_size, size_pixels, ImFontConfig.getCPtr(font_cfg), font_cfg);
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontFromMemoryCompressedTTF(SWIGTYPE_p_void compressed_font_data, int compressed_font_size, float size_pixels) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontFromMemoryCompressedTTF__SWIG_2(swigCPtr, this, SWIGTYPE_p_void.getCPtr(compressed_font_data), compressed_font_size, size_pixels);
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontFromMemoryCompressedBase85TTF(String compressed_font_data_base85, float size_pixels, ImFontConfig font_cfg, SWIGTYPE_p_unsigned_short glyph_ranges) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontFromMemoryCompressedBase85TTF__SWIG_0(swigCPtr, this, compressed_font_data_base85, size_pixels, ImFontConfig.getCPtr(font_cfg), font_cfg, SWIGTYPE_p_unsigned_short.getCPtr(glyph_ranges));
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontFromMemoryCompressedBase85TTF(String compressed_font_data_base85, float size_pixels, ImFontConfig font_cfg) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontFromMemoryCompressedBase85TTF__SWIG_1(swigCPtr, this, compressed_font_data_base85, size_pixels, ImFontConfig.getCPtr(font_cfg), font_cfg);
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public ImFont AddFontFromMemoryCompressedBase85TTF(String compressed_font_data_base85, float size_pixels) {
    long cPtr = jimguiJNI.ImFontAtlas_AddFontFromMemoryCompressedBase85TTF__SWIG_2(swigCPtr, this, compressed_font_data_base85, size_pixels);
    return (cPtr == 0) ? null : new ImFont(cPtr, false);
  }

  public void ClearInputData() {
    jimguiJNI.ImFontAtlas_ClearInputData(swigCPtr, this);
  }

  public void ClearTexData() {
    jimguiJNI.ImFontAtlas_ClearTexData(swigCPtr, this);
  }

  public void ClearFonts() {
    jimguiJNI.ImFontAtlas_ClearFonts(swigCPtr, this);
  }

  public void Clear() {
    jimguiJNI.ImFontAtlas_Clear(swigCPtr, this);
  }

  public boolean Build() {
    return jimguiJNI.ImFontAtlas_Build(swigCPtr, this);
  }

  public boolean IsBuilt() {
    return jimguiJNI.ImFontAtlas_IsBuilt(swigCPtr, this);
  }

  public void GetTexDataAsAlpha8(SWIGTYPE_p_p_unsigned_char out_pixels, SWIGTYPE_p_int out_width, SWIGTYPE_p_int out_height, SWIGTYPE_p_int out_bytes_per_pixel) {
    jimguiJNI.ImFontAtlas_GetTexDataAsAlpha8__SWIG_0(swigCPtr, this, SWIGTYPE_p_p_unsigned_char.getCPtr(out_pixels), SWIGTYPE_p_int.getCPtr(out_width), SWIGTYPE_p_int.getCPtr(out_height), SWIGTYPE_p_int.getCPtr(out_bytes_per_pixel));
  }

  public void GetTexDataAsAlpha8(SWIGTYPE_p_p_unsigned_char out_pixels, SWIGTYPE_p_int out_width, SWIGTYPE_p_int out_height) {
    jimguiJNI.ImFontAtlas_GetTexDataAsAlpha8__SWIG_1(swigCPtr, this, SWIGTYPE_p_p_unsigned_char.getCPtr(out_pixels), SWIGTYPE_p_int.getCPtr(out_width), SWIGTYPE_p_int.getCPtr(out_height));
  }

  public void GetTexDataAsRGBA32(SWIGTYPE_p_p_unsigned_char out_pixels, SWIGTYPE_p_int out_width, SWIGTYPE_p_int out_height, SWIGTYPE_p_int out_bytes_per_pixel) {
    jimguiJNI.ImFontAtlas_GetTexDataAsRGBA32__SWIG_0(swigCPtr, this, SWIGTYPE_p_p_unsigned_char.getCPtr(out_pixels), SWIGTYPE_p_int.getCPtr(out_width), SWIGTYPE_p_int.getCPtr(out_height), SWIGTYPE_p_int.getCPtr(out_bytes_per_pixel));
  }

  public void GetTexDataAsRGBA32(SWIGTYPE_p_p_unsigned_char out_pixels, SWIGTYPE_p_int out_width, SWIGTYPE_p_int out_height) {
    jimguiJNI.ImFontAtlas_GetTexDataAsRGBA32__SWIG_1(swigCPtr, this, SWIGTYPE_p_p_unsigned_char.getCPtr(out_pixels), SWIGTYPE_p_int.getCPtr(out_width), SWIGTYPE_p_int.getCPtr(out_height));
  }

  public void SetTexID(SWIGTYPE_p_void id) {
    jimguiJNI.ImFontAtlas_SetTexID(swigCPtr, this, SWIGTYPE_p_void.getCPtr(id));
  }

  public SWIGTYPE_p_unsigned_short GetGlyphRangesDefault() {
    long cPtr = jimguiJNI.ImFontAtlas_GetGlyphRangesDefault(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_short(cPtr, false);
  }

  public SWIGTYPE_p_unsigned_short GetGlyphRangesKorean() {
    long cPtr = jimguiJNI.ImFontAtlas_GetGlyphRangesKorean(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_short(cPtr, false);
  }

  public SWIGTYPE_p_unsigned_short GetGlyphRangesJapanese() {
    long cPtr = jimguiJNI.ImFontAtlas_GetGlyphRangesJapanese(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_short(cPtr, false);
  }

  public SWIGTYPE_p_unsigned_short GetGlyphRangesChineseFull() {
    long cPtr = jimguiJNI.ImFontAtlas_GetGlyphRangesChineseFull(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_short(cPtr, false);
  }

  public SWIGTYPE_p_unsigned_short GetGlyphRangesChineseSimplifiedCommon() {
    long cPtr = jimguiJNI.ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_short(cPtr, false);
  }

  public SWIGTYPE_p_unsigned_short GetGlyphRangesCyrillic() {
    long cPtr = jimguiJNI.ImFontAtlas_GetGlyphRangesCyrillic(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_short(cPtr, false);
  }

  public SWIGTYPE_p_unsigned_short GetGlyphRangesThai() {
    long cPtr = jimguiJNI.ImFontAtlas_GetGlyphRangesThai(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_short(cPtr, false);
  }

  static public class GlyphRangesBuilder {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected GlyphRangesBuilder(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(GlyphRangesBuilder obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          jimguiJNI.delete_ImFontAtlas_GlyphRangesBuilder(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setUsedChars(SWIGTYPE_p_ImVectorT_unsigned_char_t value) {
      jimguiJNI.ImFontAtlas_GlyphRangesBuilder_UsedChars_set(swigCPtr, this, SWIGTYPE_p_ImVectorT_unsigned_char_t.getCPtr(value));
    }
  
    public SWIGTYPE_p_ImVectorT_unsigned_char_t getUsedChars() {
      long cPtr = jimguiJNI.ImFontAtlas_GlyphRangesBuilder_UsedChars_get(swigCPtr, this);
      return (cPtr == 0) ? null : new SWIGTYPE_p_ImVectorT_unsigned_char_t(cPtr, false);
    }
  
    public GlyphRangesBuilder() {
      this(jimguiJNI.new_ImFontAtlas_GlyphRangesBuilder(), true);
    }
  
    public boolean GetBit(int n) {
      return jimguiJNI.ImFontAtlas_GlyphRangesBuilder_GetBit(swigCPtr, this, n);
    }
  
    public void SetBit(int n) {
      jimguiJNI.ImFontAtlas_GlyphRangesBuilder_SetBit(swigCPtr, this, n);
    }
  
    public void AddChar(int c) {
      jimguiJNI.ImFontAtlas_GlyphRangesBuilder_AddChar(swigCPtr, this, c);
    }
  
    public void AddText(String text, String text_end) {
      jimguiJNI.ImFontAtlas_GlyphRangesBuilder_AddText__SWIG_0(swigCPtr, this, text, text_end);
    }
  
    public void AddText(String text) {
      jimguiJNI.ImFontAtlas_GlyphRangesBuilder_AddText__SWIG_1(swigCPtr, this, text);
    }
  
    public void AddRanges(SWIGTYPE_p_unsigned_short ranges) {
      jimguiJNI.ImFontAtlas_GlyphRangesBuilder_AddRanges(swigCPtr, this, SWIGTYPE_p_unsigned_short.getCPtr(ranges));
    }
  
    public void BuildRanges(SWIGTYPE_p_ImVectorT_unsigned_short_t out_ranges) {
      jimguiJNI.ImFontAtlas_GlyphRangesBuilder_BuildRanges(swigCPtr, this, SWIGTYPE_p_ImVectorT_unsigned_short_t.getCPtr(out_ranges));
    }
  
  }

  static public class CustomRect {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected CustomRect(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(CustomRect obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          jimguiJNI.delete_ImFontAtlas_CustomRect(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setID(long value) {
      jimguiJNI.ImFontAtlas_CustomRect_ID_set(swigCPtr, this, value);
    }
  
    public long getID() {
      return jimguiJNI.ImFontAtlas_CustomRect_ID_get(swigCPtr, this);
    }
  
    public void setWidth(int value) {
      jimguiJNI.ImFontAtlas_CustomRect_Width_set(swigCPtr, this, value);
    }
  
    public int getWidth() {
      return jimguiJNI.ImFontAtlas_CustomRect_Width_get(swigCPtr, this);
    }
  
    public void setHeight(int value) {
      jimguiJNI.ImFontAtlas_CustomRect_Height_set(swigCPtr, this, value);
    }
  
    public int getHeight() {
      return jimguiJNI.ImFontAtlas_CustomRect_Height_get(swigCPtr, this);
    }
  
    public void setX(int value) {
      jimguiJNI.ImFontAtlas_CustomRect_X_set(swigCPtr, this, value);
    }
  
    public int getX() {
      return jimguiJNI.ImFontAtlas_CustomRect_X_get(swigCPtr, this);
    }
  
    public void setY(int value) {
      jimguiJNI.ImFontAtlas_CustomRect_Y_set(swigCPtr, this, value);
    }
  
    public int getY() {
      return jimguiJNI.ImFontAtlas_CustomRect_Y_get(swigCPtr, this);
    }
  
    public void setGlyphAdvanceX(float value) {
      jimguiJNI.ImFontAtlas_CustomRect_GlyphAdvanceX_set(swigCPtr, this, value);
    }
  
    public float getGlyphAdvanceX() {
      return jimguiJNI.ImFontAtlas_CustomRect_GlyphAdvanceX_get(swigCPtr, this);
    }
  
    public void setGlyphOffset(ImVec2 value) {
      jimguiJNI.ImFontAtlas_CustomRect_GlyphOffset_set(swigCPtr, this, ImVec2.getCPtr(value), value);
    }
  
    public ImVec2 getGlyphOffset() {
      long cPtr = jimguiJNI.ImFontAtlas_CustomRect_GlyphOffset_get(swigCPtr, this);
      return (cPtr == 0) ? null : new ImVec2(cPtr, false);
    }
  
    public void setFont(ImFont value) {
      jimguiJNI.ImFontAtlas_CustomRect_Font_set(swigCPtr, this, ImFont.getCPtr(value), value);
    }
  
    public ImFont getFont() {
      long cPtr = jimguiJNI.ImFontAtlas_CustomRect_Font_get(swigCPtr, this);
      return (cPtr == 0) ? null : new ImFont(cPtr, false);
    }
  
    public CustomRect() {
      this(jimguiJNI.new_ImFontAtlas_CustomRect(), true);
    }
  
    public boolean IsPacked() {
      return jimguiJNI.ImFontAtlas_CustomRect_IsPacked(swigCPtr, this);
    }
  
  }

  public int AddCustomRectRegular(long id, int width, int height) {
    return jimguiJNI.ImFontAtlas_AddCustomRectRegular(swigCPtr, this, id, width, height);
  }

  public int AddCustomRectFontGlyph(ImFont font, int id, int width, int height, float advance_x, ImVec2 offset) {
    return jimguiJNI.ImFontAtlas_AddCustomRectFontGlyph__SWIG_0(swigCPtr, this, ImFont.getCPtr(font), font, id, width, height, advance_x, ImVec2.getCPtr(offset), offset);
  }

  public int AddCustomRectFontGlyph(ImFont font, int id, int width, int height, float advance_x) {
    return jimguiJNI.ImFontAtlas_AddCustomRectFontGlyph__SWIG_1(swigCPtr, this, ImFont.getCPtr(font), font, id, width, height, advance_x);
  }

  public ImFontAtlas.CustomRect GetCustomRectByIndex(int index) {
    long cPtr = jimguiJNI.ImFontAtlas_GetCustomRectByIndex(swigCPtr, this, index);
    return (cPtr == 0) ? null : new ImFontAtlas.CustomRect(cPtr, false);
  }

  public void CalcCustomRectUV(ImFontAtlas.CustomRect rect, ImVec2 out_uv_min, ImVec2 out_uv_max) {
    jimguiJNI.ImFontAtlas_CalcCustomRectUV(swigCPtr, this, ImFontAtlas.CustomRect.getCPtr(rect), rect, ImVec2.getCPtr(out_uv_min), out_uv_min, ImVec2.getCPtr(out_uv_max), out_uv_max);
  }

  public boolean GetMouseCursorTexData(int cursor, ImVec2 out_offset, ImVec2 out_size, ImVec2 out_uv_border, ImVec2 out_uv_fill) {
    return jimguiJNI.ImFontAtlas_GetMouseCursorTexData(swigCPtr, this, cursor, ImVec2.getCPtr(out_offset), out_offset, ImVec2.getCPtr(out_size), out_size, ImVec2.getCPtr(out_uv_border), out_uv_border, ImVec2.getCPtr(out_uv_fill), out_uv_fill);
  }

  public void setFlags(int value) {
    jimguiJNI.ImFontAtlas_Flags_set(swigCPtr, this, value);
  }

  public int getFlags() {
    return jimguiJNI.ImFontAtlas_Flags_get(swigCPtr, this);
  }

  public void setTexID(SWIGTYPE_p_void value) {
    jimguiJNI.ImFontAtlas_TexID_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getTexID() {
    long cPtr = jimguiJNI.ImFontAtlas_TexID_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setTexDesiredWidth(int value) {
    jimguiJNI.ImFontAtlas_TexDesiredWidth_set(swigCPtr, this, value);
  }

  public int getTexDesiredWidth() {
    return jimguiJNI.ImFontAtlas_TexDesiredWidth_get(swigCPtr, this);
  }

  public void setTexGlyphPadding(int value) {
    jimguiJNI.ImFontAtlas_TexGlyphPadding_set(swigCPtr, this, value);
  }

  public int getTexGlyphPadding() {
    return jimguiJNI.ImFontAtlas_TexGlyphPadding_get(swigCPtr, this);
  }

  public void setTexPixelsAlpha8(SWIGTYPE_p_unsigned_char value) {
    jimguiJNI.ImFontAtlas_TexPixelsAlpha8_set(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_char getTexPixelsAlpha8() {
    long cPtr = jimguiJNI.ImFontAtlas_TexPixelsAlpha8_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public void setTexPixelsRGBA32(SWIGTYPE_p_unsigned_int value) {
    jimguiJNI.ImFontAtlas_TexPixelsRGBA32_set(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_int getTexPixelsRGBA32() {
    long cPtr = jimguiJNI.ImFontAtlas_TexPixelsRGBA32_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_int(cPtr, false);
  }

  public void setTexWidth(int value) {
    jimguiJNI.ImFontAtlas_TexWidth_set(swigCPtr, this, value);
  }

  public int getTexWidth() {
    return jimguiJNI.ImFontAtlas_TexWidth_get(swigCPtr, this);
  }

  public void setTexHeight(int value) {
    jimguiJNI.ImFontAtlas_TexHeight_set(swigCPtr, this, value);
  }

  public int getTexHeight() {
    return jimguiJNI.ImFontAtlas_TexHeight_get(swigCPtr, this);
  }

  public void setTexUvScale(ImVec2 value) {
    jimguiJNI.ImFontAtlas_TexUvScale_set(swigCPtr, this, ImVec2.getCPtr(value), value);
  }

  public ImVec2 getTexUvScale() {
    long cPtr = jimguiJNI.ImFontAtlas_TexUvScale_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ImVec2(cPtr, false);
  }

  public void setTexUvWhitePixel(ImVec2 value) {
    jimguiJNI.ImFontAtlas_TexUvWhitePixel_set(swigCPtr, this, ImVec2.getCPtr(value), value);
  }

  public ImVec2 getTexUvWhitePixel() {
    long cPtr = jimguiJNI.ImFontAtlas_TexUvWhitePixel_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ImVec2(cPtr, false);
  }

  public void setFonts(SWIGTYPE_p_ImVectorT_ImFont_p_t value) {
    jimguiJNI.ImFontAtlas_Fonts_set(swigCPtr, this, SWIGTYPE_p_ImVectorT_ImFont_p_t.getCPtr(value));
  }

  public SWIGTYPE_p_ImVectorT_ImFont_p_t getFonts() {
    long cPtr = jimguiJNI.ImFontAtlas_Fonts_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ImVectorT_ImFont_p_t(cPtr, false);
  }

  public void setCustomRects(SWIGTYPE_p_ImVectorT_ImFontAtlas__CustomRect_t value) {
    jimguiJNI.ImFontAtlas_CustomRects_set(swigCPtr, this, SWIGTYPE_p_ImVectorT_ImFontAtlas__CustomRect_t.getCPtr(value));
  }

  public SWIGTYPE_p_ImVectorT_ImFontAtlas__CustomRect_t getCustomRects() {
    long cPtr = jimguiJNI.ImFontAtlas_CustomRects_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ImVectorT_ImFontAtlas__CustomRect_t(cPtr, false);
  }

  public void setConfigData(SWIGTYPE_p_ImVectorT_ImFontConfig_t value) {
    jimguiJNI.ImFontAtlas_ConfigData_set(swigCPtr, this, SWIGTYPE_p_ImVectorT_ImFontConfig_t.getCPtr(value));
  }

  public SWIGTYPE_p_ImVectorT_ImFontConfig_t getConfigData() {
    long cPtr = jimguiJNI.ImFontAtlas_ConfigData_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ImVectorT_ImFontConfig_t(cPtr, false);
  }

  public void setCustomRectIds(SWIGTYPE_p_int value) {
    jimguiJNI.ImFontAtlas_CustomRectIds_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));
  }

  public SWIGTYPE_p_int getCustomRectIds() {
    long cPtr = jimguiJNI.ImFontAtlas_CustomRectIds_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

}
